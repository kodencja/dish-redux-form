{"version":3,"sources":["img sync /^/.*/.jpg$","img/pizza.jpg","img/plaid.jpg","img/sandwich.jpg","img/soup.jpg","img/veg4.jpg","components/inputTag.js","redux/dishTypes.js","redux/dishReducer.js","redux/rootReducer.js","redux/store.js","components/Input.jsx","components/RenderField.jsx","functions/validation.js","functions/onSubmit.js","components/DishForm.jsx","components/Main.js","redux/dishActions.js","functions/appearing.js","functions/setOutputStyle.js","App.js","reportWebVitals.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","renderTag","output_Style","final_response","any_change_made","typeSet","typeChange","imgName","reset","initState","url","outputStyle","left","finalResponse","anyChangeMade","ifTypeWasSetFirstTime","typeChanged","imgSrc","dishReducer","state","action","type","payload","rootReducer","combineReducers","form","formReducer","dishes","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","Input","input","custom","options","useMemo","dishes_opt","undefined","name","ind","defaultValue","hidden","defaultOption","value","tagtype","className","style","left_styling","htmlFor","label","meta","touched","error","RenderField","no_of_inputs","add_class","rest_props","addToInputDivRef","useContext","DishContext","ref","Field","isValidTime","time","test","RegExp","errorTime","sendToServer","formData","Promise","reject","method","headers","data","JSON","stringify","setTimeout","axios","then","res","console","log","err","message","catch","startlValues","preparation_time","DishesForm","reduxForm","validate","rest","errors","no_of_slices","diameter","spiciness_scale","slices_of_bread","trim","registeredFields","eachProp","valueWithoutSpaces","toString","split","join","length","regNo","props","dishContext","dishState","formRdx","setType","ifTypeChanged","setFinalResp","resetDishState","checkIfAnyChangeMade","inputDivRef","btnRef","handleSubmit","initialize","submitting","submitFailed","submitSucceeded","initialValues","useEffect","values","choosePropsToSend","timeChecked","constProps","watchForStartChangeMade","onSubmit","a","reviseDataBeforeSend","SubmissionError","placeholder","component","required","onChange","step","min","max","pattern","inputsDivRef_copy","current","slice","target","parse","val","Number","prevVal","parseFloat","title","inital","disabled","classes","getReplyClasses","React","memo","createContext","connect","dishFormRdx","dispatch","setOutputLeft","setOutputStyle","setTypeSet","setTypeChange","setImgSrc","setMinValue","inputName","arg","setMaxValue","titleRef","useRef","answerRef","dishesRef","welcomeRef","inputDivRefCurr","btnRefCurr","forEach","el","classList","classesArr","Array","from","hideClassName","filter","startsWith","elName","classNameDirection","substr","indexOf","children","getAttribute","add","remove","contains","appearInput","dependForLeftStyle","elemInput","elVal","inputVal","elTrg","unit","styles","getComputedStyle","padding","paddingLeft","paddingRight","elWidth","clientWidth","bubbleWidth","document","documentElement","getPropertyValue","thumbWidth","thumbBorderWidth","refObjMin","parseInt","refObjMax","ratio","set_Output_Style","useCallback","includes","push","photo","alt","src","require","default","welcome","Provider","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6cc7ef1c.chunk.js","sourcesContent":["var map = {\n\t\"./pizza.jpg\": 221,\n\t\"./plaid.jpg\": 222,\n\t\"./sandwich.jpg\": 223,\n\t\"./soup.jpg\": 224,\n\t\"./veg4.jpg\": 225\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 220;","export default __webpack_public_path__ + \"static/media/pizza.a8e2abcd.jpg\";","export default __webpack_public_path__ + \"static/media/plaid.d089c43d.jpg\";","export default __webpack_public_path__ + \"static/media/sandwich.4c85b99e.jpg\";","export default __webpack_public_path__ + \"static/media/soup.eae9ab6c.jpg\";","export default __webpack_public_path__ + \"static/media/veg4.5db3e508.jpg\";","export const createInputTag =\r\n  (renderTag) =>\r\n  ({ input, label, meta, ...custom }) => {\r\n    const { touched, error } = meta;\r\n    return (\r\n      <div\r\n        className=\"input-block\"\r\n      >\r\n        <label htmlFor={input.name}>{label}</label>\r\n        {renderTag(input, custom)}\r\n        {touched && error && error !== undefined && (\r\n          <span className=\"invalid-feedback\">{error}</span>\r\n        )}\r\n      </div>\r\n    );\r\n  };","export const output_Style = \"outputStyle\";\r\nexport const final_response = \"finalResponse\";\r\nexport const any_change_made = \"any_change_made\";\r\nexport const typeSet = \"typeSet\";\r\nexport const typeChange = \"typeChange\";\r\nexport const setMinVal = \"setMinVal\";\r\nexport const setMaxVal = \"setMaxVal\";\r\nexport const imgName = \"imgName\";\r\nexport const reset = \"reset\";","import {\r\n  any_change_made,\r\n  final_response,\r\n  imgName,\r\n  output_Style,\r\n  reset,\r\n  setMaxVal,\r\n  setMinVal,\r\n  typeChange,\r\n  typeSet,\r\n} from \"./dishTypes\";\r\n\r\nconst initState = {\r\n  url: \"https://jsonplaceholder.typicode.com/posts\",\r\n  outputStyle: { left: \"0\" },\r\n  finalResponse: \"\",\r\n  anyChangeMade: false,\r\n  ifTypeWasSetFirstTime: false,\r\n  typeChanged: false,\r\n  imgSrc: \"\",\r\n};\r\n\r\nconst dishReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    // to set left value of the \"bubble\" output\r\n    case output_Style:\r\n      return {\r\n        ...state,\r\n        outputStyle: { ...state.outputStyle, left: action.payload },\r\n      };\r\n    case final_response:\r\n      return { ...state, finalResponse: action.payload };\r\n\r\n    case typeSet:\r\n      return { ...state, ifTypeWasSetFirstTime: action.payload };\r\n\r\n    case typeChange:\r\n      return { ...state, typeChanged: action.payload };\r\n\r\n    case reset:\r\n      return initState;\r\n\r\n    case imgName:\r\n      return {\r\n        ...state,\r\n        imgSrc: action.payload,\r\n      };\r\n\r\n    case any_change_made:\r\n      return {\r\n        ...state,\r\n        anyChangeMade: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default dishReducer;\r\n","import { combineReducers } from \"redux\";\r\n// import { routerReducer } from \"react-router-redux\";\r\nimport { reducer as formReducer} from 'redux-form';\r\nimport dishReducer from \"./dishReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    form: formReducer,\r\n    dishes: dishReducer,\r\n    // routing: routerReducer\r\n});\r\n\r\nexport default rootReducer;","import { createStore } from 'redux';\r\n// import { routerMiddleware } from 'react-router-redux';\r\nimport rootReducer from \"./rootReducer\";\r\n\r\n\r\n/* eslint-disable no-underscore-dangle */\r\n  const store = createStore(\r\n    rootReducer,\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  )\r\n\r\nexport default store;\r\n/* eslint-enable */","import React, { useMemo } from \"react\";\r\nimport { defaultOption } from \"./DishForm\";\r\nimport { createInputTag } from \"./inputTag\";\r\n\r\nconst Input = createInputTag((input, custom) => {\r\n  const options = useMemo(() => {\r\n    if (custom.dishes_opt && custom.dishes_opt !== undefined) {\r\n      return custom.dishes_opt.map((name, ind) => {\r\n        if (name === \"default\") {\r\n          return (\r\n            <option defaultValue hidden key={ind}>\r\n              {defaultOption}\r\n            </option>\r\n          );\r\n        } else {\r\n          return (\r\n            <option value={name} key={ind}>\r\n              {name}\r\n            </option>\r\n          );\r\n        }\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  if (custom.tagtype === \"select\") {\r\n    return (\r\n      <custom.tagtype {...input} {...custom}>\r\n        {custom.dishes_opt ? options : null}\r\n      </custom.tagtype>\r\n    );\r\n  } else if (custom.tagtype === \"input\" && custom.type === \"range\") {\r\n    return (\r\n      <>\r\n        <custom.tagtype {...input} {...custom} />\r\n        <output\r\n          className=\"bubble\"\r\n          style={custom.left_styling}\r\n          htmlFor={input.name}\r\n        >\r\n          {input.value}\r\n        </output>\r\n      </>\r\n    );\r\n  } else {\r\n    return <custom.tagtype {...input} {...custom} />;\r\n  }\r\n});\r\n\r\nexport default Input;\r\n","import React, { useContext } from \"react\";\r\nimport { DishContext } from \"./Main\";\r\nimport { Field } from \"redux-form\";\r\n\r\nconst RenderField = ({ no_of_inputs, add_class, ...rest_props }) => {\r\n  const dishContext = useContext(DishContext);\r\n\r\n  const { addToInputDivRef } = dishContext;\r\n\r\n  return no_of_inputs === 1 ? (\r\n    <div className=\"mrg-x-auto narrow\">\r\n      <div className=\"input-cont\">\r\n        <div className={\"trans \" + add_class} ref={addToInputDivRef}>\r\n          <Field {...rest_props} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <Field {...rest_props} />\r\n  );\r\n};\r\n\r\nexport default RenderField;\r\n","import { defaultOption, getChangeProp } from \"../components/DishForm\";\r\n\r\n// check time format\r\n// 3 groups of 2 character separated by : each character must be a digit contained in that specific ranges\r\nconst isValidTime = (time) => {\r\n  let error = \"\";\r\n\r\n  if (time < \"00:15:00\") {\r\n    error = \"We need at least 15 min to prepare the dish!\";\r\n  }\r\n  const regexpAll = new RegExp(\r\n    /^([0-9]|0[0-9]|1[0-9]|2[0-3]):((([0-5][0-9]):([0-5][0-9]))|([0-5][0-9]))$/\r\n  );\r\n\r\n  return { test: regexpAll.test(time), errorTime: error };\r\n};\r\n\r\n\r\nexport const validate = (value, rest) => {\r\n  const {\r\n    name = \"\",\r\n    preparation_time = \"\",\r\n    type = \"\",\r\n    no_of_slices = \"\",\r\n    diameter = \"\",\r\n    spiciness_scale = \"\",\r\n    slices_of_bread = \"\",\r\n  } = value;\r\n\r\n  const errors = {};\r\n  if (name.trim() === \"\") {\r\n    errors.name = \"Dish name is required!\";\r\n  }\r\n  if (preparation_time.trim() === \"\") {\r\n    errors.preparation_time = \"Preparation time is required!\";\r\n  }\r\n  if (type.trim() === \"\" || type === defaultOption) {\r\n    errors.type = \"Type is required!\";\r\n  }\r\n\r\n  // advanced validation - check type of the value (numbers or letters)\r\n  if (rest.registeredFields && rest.registeredFields !== undefined) {\r\n    for (let eachProp in rest.registeredFields) {\r\n      if (value[eachProp] !== undefined && value[eachProp] !== \"\") {\r\n        let valueWithoutSpaces;\r\n        valueWithoutSpaces = value[eachProp].toString().split(\" \").join(\"\");\r\n        if (valueWithoutSpaces === \"\") {\r\n          errors[eachProp] = `${eachProp} is required`;\r\n        }\r\n\r\n        // for alpha characters values\r\n        if (eachProp === \"name\" || eachProp === \"type\") {\r\n          if (value[eachProp].length > 30) {\r\n            errors[eachProp] = `Use max 30 characters!`;\r\n          }\r\n          const regLetters = /^[a-zA-Z]+$/gim;\r\n\r\n          const ifHasNumbers = regLetters.test(valueWithoutSpaces);\r\n          if (!ifHasNumbers) {\r\n            errors[eachProp] = `Use only letters`;\r\n          }\r\n        }\r\n        // for numeric values\r\n        else {\r\n          if (value[eachProp].length > 10) {\r\n            errors[eachProp] = `The number is too big!`;\r\n          } else if (valueWithoutSpaces === \"0\" || value[eachProp] <= 0) {\r\n            errors[eachProp] = \"The number must exceed 0\";\r\n          }\r\n\r\n          if (eachProp === \"preparation_time\") {\r\n            const { test, errorTime } = isValidTime(valueWithoutSpaces);\r\n\r\n            if (!test) {\r\n              errors.preparation_time = \"Use only numbers in time format\";\r\n            }\r\n            if (errorTime !== \"\") {\r\n              errors.preparation_time = errorTime;\r\n            }\r\n          } else {\r\n            let regNo = /\\D/gim;\r\n\r\n            if (eachProp === \"diameter\") {\r\n              regNo = /^[+-]?([0-9]*[.])?[0-9]+$/;\r\n              let ifHasNumbers = regNo.test(valueWithoutSpaces);\r\n              if (!ifHasNumbers) {\r\n                errors[eachProp] = `Use floating no`;\r\n              }\r\n            } else {\r\n              let ifHasNumbers = regNo.test(valueWithoutSpaces);\r\n              if (ifHasNumbers) {\r\n                errors[eachProp] = `Use only integer no`;\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return errors;\r\n};\r\n","import axios from \"axios\";\r\n\r\nexport const sendToServer = (formData, url) => {\r\n  return new Promise((resolve, reject) => {\r\n    const options = {\r\n      method: \"POST\",\r\n      url: url,\r\n      headers: { \"Content-type\": \"application/json\" },\r\n      data: JSON.stringify(formData),\r\n    };\r\n\r\n    setTimeout(() => {\r\n      axios(options)\r\n        .then(\r\n          (res) => {\r\n            console.log(res.data);\r\n            resolve(res.data);\r\n          },\r\n          (err) => {\r\n            reject(err.message);\r\n          }\r\n        )\r\n        .catch((err) => {\r\n          console.log(err.message);\r\n          reject(err.message);\r\n        });\r\n    }, 500);\r\n  });\r\n};","import React, { useEffect, useContext } from \"react\";\r\nimport PropTypes, { exact } from \"prop-types\";\r\nimport { DishContext } from \"./Main\";\r\nimport { Field, reduxForm, SubmissionError } from \"redux-form\";\r\nimport Input from \"./Input\";\r\nimport RenderField from \"./RenderField\";\r\nimport { validate } from \"../functions/validation\";\r\nimport { sendToServer } from \"../functions/onSubmit\";\r\n\r\nexport const defaultOption = \"Select an option\";\r\n\r\nconst startlValues = {\r\n  name: undefined,\r\n  preparation_time: \"00:00:00\",\r\n  type: defaultOption,\r\n};\r\n\r\nexport const getChangeProp = (change) => {\r\n  return change;\r\n};\r\n\r\nconst DishForm = (props) => {\r\n  const dishContext = useContext(DishContext);\r\n  const {\r\n    dishState,\r\n    formRdx,\r\n    setType,\r\n    ifTypeChanged,\r\n    setFinalResp,\r\n    resetDishState,\r\n    checkIfAnyChangeMade,\r\n    addToInputDivRef,\r\n    inputDivRef,\r\n    btnRef,\r\n  } = dishContext;\r\n\r\n  const {\r\n    handleSubmit,\r\n    initialize,\r\n    submitting,\r\n    submitFailed,\r\n    submitSucceeded,\r\n    initialValues,\r\n  } = props;\r\n\r\n  const { finalResponse } = dishState;\r\n\r\n  useEffect(() => {\r\n    initialize(startlValues);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // console.log(\"formRdx\");\r\n    // console.log(formRdx);\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (\r\n      formRdx !== undefined &&\r\n      formRdx.values !== undefined &&\r\n      formRdx.values.type &&\r\n      !dishState.ifTypeWasSetFirstTime\r\n    ) {\r\n      setType(true);\r\n    }\r\n  }, [dishState.anyChangeMade]);\r\n\r\n  const finalTimeValidation = (time) => {\r\n    if (time.length < 8) {\r\n      time = time + \":00\";\r\n      return time;\r\n    }\r\n    return time;\r\n  };\r\n\r\n  const choosePropsToSend = (formData) => {\r\n    return new Promise((resolve, reject) => {\r\n      const timeChecked = finalTimeValidation(formData.preparation_time);\r\n\r\n      const constProps = {\r\n        name: formData.name,\r\n        preparation_time: timeChecked,\r\n        type: formData.type,\r\n      };\r\n      let dataToSend = {};\r\n      if (formData.type === \"pizza\") {\r\n        dataToSend = {\r\n          ...constProps,\r\n          diameter: formData.diameter,\r\n          no_of_slices: formData.no_of_slices,\r\n        };\r\n      } else if (formData.type === \"soup\") {\r\n        dataToSend = {\r\n          ...constProps,\r\n          spiciness_scale: formData.spiciness_scale,\r\n        };\r\n      } else {\r\n        dataToSend = {\r\n          ...constProps,\r\n          slices_of_bread: formData.slices_of_bread,\r\n        };\r\n      }\r\n      resolve(dataToSend);\r\n    });\r\n  };\r\n\r\n  const sendData = (formData) => {\r\n    return new Promise(async (resolve, reject) => {\r\n      setFinalResp(\"Wait...\");\r\n      // console.log(\"formData\");\r\n      // console.log(formData);\r\n      // console.log(\"formRdx\");\r\n      // console.log(formRdx);\r\n\r\n      const reviseDataBeforeSend = await choosePropsToSend(formData);\r\n\r\n      sendToServer(reviseDataBeforeSend, dishState.url)\r\n        .then(\r\n          (res) => {\r\n            setFinalResp(\"Your order has been sent successfully!\");\r\n            console.log(res);\r\n            console.log(\"initialize startlValues\");\r\n            initialize(startlValues);\r\n            checkIfAnyChangeMade(false);\r\n            resolve();\r\n          },\r\n          (err) => {\r\n            throw err;\r\n          }\r\n        )\r\n        .catch((err) => {\r\n          console.log(err);\r\n          setFinalResp(err);\r\n          reject(new SubmissionError(err));\r\n        });\r\n    });\r\n  };\r\n\r\n  const getReplyClasses = () => {\r\n    let classes = \"reply \";\r\n    classes += submitting\r\n      ? \"wait\"\r\n      : !submitting && submitSucceeded\r\n      ? \"fine\"\r\n      : !submitting && submitFailed\r\n      ? \"bad\"\r\n      : \"\";\r\n    return classes;\r\n  };\r\n\r\n  const typeOnChange = (e) => {\r\n    watchForStartChangeMade();\r\n    // create new inputDivRef array with three inputDivRefs as constant elements\r\n    let inputsDivRef_copy = inputDivRef.current.slice(0, 3);\r\n    inputDivRef.current = [];\r\n    inputDivRef.current = inputsDivRef_copy;\r\n\r\n    if (e.target.value === \"soup\" && !formRdx.values.spiciness_scale) {\r\n      initialize({ ...formRdx.values, spiciness_scale: 1 });\r\n    }\r\n    setTimeout(() => {\r\n      ifTypeChanged(true);\r\n    }, 50);\r\n  };\r\n\r\n  const watchForStartChangeMade = () => {\r\n    if (!dishState.anyChangeMade) {\r\n      console.log(\"resetDishState\");\r\n      resetDishState();\r\n      checkIfAnyChangeMade(true);\r\n    }\r\n  };\r\n\r\n  const checkInteger = (val) => {\r\n    if (!val || val === \"0\") {\r\n      return val;\r\n    } else {\r\n      return Number(val);\r\n    }\r\n  };\r\n\r\n  const checkFloat = (val, prevVal) => {\r\n    if (!val || val === \"0\") {\r\n      return val;\r\n    } else {\r\n      return parseFloat(val);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form id=\"dishes-form\" onSubmit={handleSubmit(sendData)}>\r\n      <div className=\"row center\">\r\n        <div className=\"input-cont\">\r\n          <div\r\n            className=\"hide-left narrow-70 mrg-x-auto trans\"\r\n            ref={addToInputDivRef}\r\n          >\r\n            <Field\r\n              name=\"name\"\r\n              label=\"Dish name\"\r\n              type=\"text\"\r\n              id=\"name\"\r\n              tagtype=\"input\"\r\n              aria-label=\"name\"\r\n              className=\"form-control\"\r\n              placeholder=\"Write dish name\"\r\n              component={Input}\r\n              required={true}\r\n              onChange={watchForStartChangeMade}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"input-cont\">\r\n          <div\r\n            className=\"trans hide-right narrow-70 mrg-x-auto\"\r\n            ref={addToInputDivRef}\r\n          >\r\n            <Field\r\n              name=\"preparation_time\"\r\n              label=\"Preparation time\"\r\n              type=\"time\"\r\n              tagtype=\"input\"\r\n              id=\"preparation_time\"\r\n              className=\"form-control\"\r\n              step={1}\r\n              aria-label=\"preparation_time\"\r\n              min=\"00:15:00\"\r\n              max=\"23:59:59\"\r\n              pattern={\"[0-9]|0[0-9]|1[0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9]\"}\r\n              component={Input}\r\n              required={true}\r\n              onChange={watchForStartChangeMade}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"input-cont\">\r\n          <div\r\n            className=\"hide-up narrow-70 mrg-x-auto trans\"\r\n            ref={addToInputDivRef}\r\n          >\r\n            <Field\r\n              name=\"type\"\r\n              label=\"Type\"\r\n              tagtype=\"select\"\r\n              dishes_opt={[\"default\", \"pizza\", \"soup\", \"sandwich\"]}\r\n              component={Input}\r\n              aria-label=\"type\"\r\n              id=\"type\"\r\n              className=\"form-control form-control-lg\"\r\n              required\r\n              onChange={typeOnChange}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        {formRdx !== undefined &&\r\n        formRdx.values !== undefined &&\r\n        formRdx.values.type ? (\r\n          formRdx.values.type === \"pizza\" ? (\r\n            <div className=\"mrg-x-auto\">\r\n              <div className=\"input-cont\">\r\n                <div\r\n                  className=\"flex justify-center align-start hide-up trans\"\r\n                  ref={addToInputDivRef}\r\n                >\r\n                  <RenderField\r\n                    tagtype=\"input\"\r\n                    label=\"No of slices\"\r\n                    name=\"no_of_slices\"\r\n                    type=\"number\"\r\n                    id=\"no_of_slices\"\r\n                    className=\"form-control\"\r\n                    aria-label=\"no_of_slices\"\r\n                    required={\r\n                      dishState.ifTypeWasSetFirstTime &&\r\n                      formRdx.values.type === \"pizza\"\r\n                        ? true\r\n                        : false\r\n                    }\r\n                    min={1}\r\n                    max={30}\r\n                    component={Input}\r\n                    parse={checkInteger}\r\n                  />\r\n                  <RenderField\r\n                    tagtype=\"input\"\r\n                    label=\"Diameter\"\r\n                    name=\"diameter\"\r\n                    type=\"number\"\r\n                    id=\"diameter\"\r\n                    className=\"form-control\"\r\n                    step={0.1}\r\n                    aria-label=\"diameter\"\r\n                    required={\r\n                      dishState.ifTypeWasSetFirstTime &&\r\n                      formRdx.values.type === \"pizza\"\r\n                        ? true\r\n                        : false\r\n                    }\r\n                    min={0.1}\r\n                    max={50}\r\n                    parse={checkFloat}\r\n                    component={Input}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ) : formRdx.values.type === \"soup\" ? (\r\n            <RenderField\r\n              tagtype=\"input\"\r\n              title=\"Spiciness scale\"\r\n              name=\"spiciness_scale\"\r\n              type=\"range\"\r\n              id=\"spiciness_scale\"\r\n              className=\"form-control form-control-range\"\r\n              add_class=\"range hide-left\"\r\n              parse={(value) => Number(value)}\r\n              step={1}\r\n              aria-label=\"spiciness_scale\"\r\n              data-sizing=\"px\"\r\n              min={1}\r\n              max={10}\r\n              component={Input}\r\n              meta={{ inital: 1 }}\r\n              required={\r\n                dishState.ifTypeWasSetFirstTime &&\r\n                formRdx.values.type === \"soup\"\r\n                  ? true\r\n                  : false\r\n              }\r\n              left_styling={dishState.outputStyle}\r\n              no_of_inputs={1}\r\n            />\r\n          ) : formRdx.values.type === \"sandwich\" ? (\r\n            <RenderField\r\n              tagtype=\"input\"\r\n              label=\"No of slices\"\r\n              name=\"slices_of_bread\"\r\n              type=\"number\"\r\n              id=\"slices_of_bread\"\r\n              className=\"form-control\"\r\n              add_class=\"number-width hide-right\"\r\n              parse={(value) => Number(value)}\r\n              step={1}\r\n              min={1}\r\n              aria-label=\"slices_of_bread\"\r\n              component={Input}\r\n              required={\r\n                dishState.ifTypeWasSetFirstTime &&\r\n                formRdx.values.type === \"sandwich\"\r\n                  ? true\r\n                  : false\r\n              }\r\n              no_of_inputs={1}\r\n            />\r\n          ) : null\r\n        ) : null}\r\n      </div>\r\n      <div className=\"row center\">\r\n        <div className=\"buttons col\">\r\n          <button\r\n            type=\"submit\"\r\n            disabled={submitting}\r\n            className=\"btn btn-check hide-down\"\r\n            ref={btnRef}\r\n          >\r\n            Submit\r\n          </button>\r\n        </div>\r\n        <p name=\"reply\" className={getReplyClasses()}>\r\n          {finalResponse}\r\n        </p>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst DishesForm = reduxForm({\r\n  form: \"formRdx\",\r\n  validate,\r\n})(DishForm);\r\n\r\nexport default React.memo(DishesForm);\r\n","import React, { useRef, useEffect, useCallback } from \"react\";\r\nimport PropTypes, { exact } from 'prop-types';\r\nimport { connect } from \"react-redux\";\r\nimport { setOutputStyle, setTypeSet, setFinalResponse, setMin, setMax, setTypeChange, resetAll, setImgSrc, checkIfAnyChangeMade } from \"../redux/dishActions\";\r\nimport { appearInput } from \"../functions/appearing\";\r\nimport { set_Output_Style } from \"../functions/setOutputStyle\";\r\nimport DishForm, { defaultOption } from \"./DishForm\";\r\n\r\nexport const DishContext = React.createContext();\r\n\r\nconst Main = (props) => {\r\n  const { dishState, dishFormRdx, setOutputLeft, setType, ifTypeChanged, setImgSrc, setFinalResp, setMinValue, setMaxValue, resetDishState, checkIfAnyChangeMade } = props;\r\n\r\n  const { formRdx } = dishFormRdx;\r\n\r\n  // main title ref\r\n  const titleRef = useRef();\r\n  // refs to particular divs\r\n  const answerRef = useRef();\r\n  const dishesRef = useRef();\r\n\r\n  // ref to submit btn\r\n  const btnRef = useRef();\r\n\r\n  // reply (with finalResponse) ref\r\n  const welcomeRef = useRef();\r\n\r\n  // array of inputs' wrapper div refs\r\n  const inputDivRef = useRef([]);\r\n\r\n  // useEffect(()=>{\r\n  //   console.log(dishFormRdx);\r\n  // },[])\r\n\r\n\r\n  useEffect(() => {\r\n    if(dishState.ifTypeWasSetFirstTime && formRdx.values.type !== undefined){\r\n      setTimeout(() => {\r\n        setImgSrc(formRdx.values.type);\r\n      }, 500);\r\n    }\r\n  }, [dishState.typeChanged])\r\n\r\n\r\n  // handle input appearing animation\r\n  useEffect(() => {\r\n      if(inputDivRef.current !== undefined && btnRef.current !== undefined){\r\n        appearInput(inputDivRef.current, btnRef.current);\r\n      }\r\n  },[dishState.typeChanged]);\r\n\r\nconst dependForLeftStyle = (dishState.ifTypeWasSetFirstTime && formRdx.values.type === \"soup\" ? formRdx.values.spiciness_scale : dishState.ifTypeWasSetFirstTime)\r\n\r\nuseEffect(() => {\r\n  // call a function to set a left distance of bubble with the default value - dedicated to \"range\" type input\r\n  if (inputDivRef.current !== undefined && inputDivRef.current !== null) {\r\n    inputDivRef.current.forEach((el) => {\r\n      const elemInput =  el.children[0].children[1];\r\n      const elType = elemInput.getAttribute(\"type\");\r\n\r\n      if (elType === \"range\") {\r\n        const elVal = elemInput.getAttribute(\"value\");\r\n\r\n        // set dynamically the bubble's 'left' attribute\r\n        if(elVal !== undefined && elVal !== ''){\r\n          set_Output_Style(elVal, elemInput, \"%\", setOutputLeft);\r\n        }\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n}, [dependForLeftStyle]);\r\n\r\n  // handle main title appearing and \"Hungry?\" welcome question\r\n  useEffect(() => {\r\n    if (titleRef.current !== undefined && titleRef.current !== null) {\r\n      setTimeout(() => {\r\n        titleRef.current.classList.add(\"drop-fast\");\r\n        titleRef.current.classList.remove(\"hide-upper\");\r\n      }, 1500);\r\n    }\r\n\r\n    if (welcomeRef.current !== undefined && welcomeRef.current !== null) {\r\n      welcomeRef.current.classList.add(\"hello\");\r\n    }\r\n  }, []);\r\n\r\n  // input's array refs\r\n  const addToInputDivRef = useCallback((el) => {\r\n    // add inputDivs at the beginning\r\n    if(!dishState.typeChanged && !dishState.ifTypeWasSetFirstTime){\r\n      if (el && !inputDivRef.current.includes(el)) {\r\n        inputDivRef.current.push(el); \r\n      }\r\n    } \r\n    // add additional inputDivs on every 'type' change\r\n    else if(dishState.typeChanged) {\r\n      \r\n      // console.log(inputDivRef.current);\r\n      if (el && !inputDivRef.current.includes(el)) {\r\n        inputDivRef.current.push(el); \r\n      }\r\n    }\r\n\r\n    // if all inputDivs are added restore dish.'typeChanged' to false\r\n    if(inputDivRef.current.length >= 4){\r\n      setTimeout(() => {\r\n        ifTypeChanged(false);\r\n      }, 1050);\r\n    }\r\n  },[dishState.typeChanged]);\r\n\r\n  const photo = (\r\n    <img\r\n      alt={dishState.ifTypeWasSetFirstTime && !dishState.typeChanged ? formRdx.values.type : \"\"}\r\n      className={`photo ${!dishState.typeChanged ? 'hanging' : 'hide-photo'} `}\r\n      src={\r\n        dishState.ifTypeWasSetFirstTime && dishState.imgSrc !== '' && formRdx.values.type !== undefined\r\n          ? require(`../img/${dishState.imgSrc}.jpg`).default\r\n          : \"\"\r\n      }\r\n    />\r\n  );\r\n\r\n  const welcome = (\r\n    <p className=\"welcome\" ref={welcomeRef}>Hungry?</p>\r\n  )\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h2 className=\"title hide-upper\" ref={titleRef}>\r\n        Let's have a delicious meal!\r\n      </h2>\r\n      <div className=\"dishes flex justify-center align-center\" ref={dishesRef}>\r\n        <DishContext.Provider\r\n        value={{\r\n          dishState,\r\n          formRdx,\r\n          setOutputLeft,\r\n          setType,\r\n          ifTypeChanged,\r\n          setMaxValue,\r\n          setMinValue,\r\n          setFinalResp,\r\n          resetDishState,\r\n          checkIfAnyChangeMade,\r\n          addToInputDivRef,\r\n          inputDivRef,\r\n          btnRef\r\n        }}\r\n        >\r\n        <DishForm />\r\n        </DishContext.Provider>\r\n        <div className=\"image mrg-x-auto\">\r\n        <div className=\"answer\" ref={answerRef}>\r\n          {dishState.ifTypeWasSetFirstTime && formRdx.values.type !== defaultOption ? photo : welcome}\r\n        </div>\r\n      </div>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    dishState: state.dishes,\r\n    dishFormRdx: state.form,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setOutputLeft: (value) => dispatch(setOutputStyle(value)),\r\n    setType: (value) => dispatch(setTypeSet(value)),\r\n    ifTypeChanged: (value) => dispatch(setTypeChange(value)),\r\n    setImgSrc: (value) => dispatch(setImgSrc(value)),\r\n    setFinalResp: (value) => dispatch(setFinalResponse(value)),\r\n    setMinValue: (value) => dispatch(setMin(value)),\r\n    setMaxValue: (value) => dispatch(setMax(value)),\r\n    resetDishState: () => dispatch(resetAll()),\r\n    checkIfAnyChangeMade: (value) => dispatch(checkIfAnyChangeMade(value))\r\n  };\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);\r\n","import { output_Style, final_response, typeSet, setMinVal, setMaxVal, typeChange, reset, imgName, any_change_made } from \"./dishTypes\"\r\n\r\n\r\nexport const setOutputStyle = (value) =>{\r\n    return {\r\n        type: output_Style,\r\n        payload: value\r\n    }\r\n};\r\n\r\nexport const setFinalResponse = (words) => {\r\n    return {\r\n        type: final_response,\r\n        payload: words\r\n    }\r\n}\r\n\r\nexport const setTypeSet = (value) => {\r\n    return {\r\n        type: typeSet,\r\n        payload: value\r\n    }\r\n}\r\n\r\nexport const setTypeChange = (value) => {\r\n    return {\r\n        type: typeChange,\r\n        payload: value\r\n    }\r\n}\r\n\r\nexport const setMin = (arg) => {\r\n    return {\r\n        type: setMinVal,\r\n        inputName: arg.name,\r\n        payload: arg.value\r\n    }\r\n}\r\n\r\nexport const setMax = (arg) => {\r\n    return {\r\n        type: setMaxVal,\r\n        inputName: arg.name,\r\n        payload: arg.value\r\n    }\r\n}\r\n\r\nexport const resetAll = () => {\r\n    return {\r\n        type: reset\r\n    }\r\n}\r\n\r\nexport const setImgSrc = (name) => {\r\n    return {\r\n        type: imgName,\r\n        payload: name\r\n    }\r\n}\r\n\r\nexport const checkIfAnyChangeMade = (val) => {\r\n    return {\r\n        type: any_change_made,\r\n        payload: val\r\n    }\r\n}","export const appearInput = (inputDivRefCurr, btnRefCurr) => {\r\n  const time = 2500,\r\n    timeAdd = 700;\r\n\r\n  if (inputDivRefCurr !== undefined && inputDivRefCurr !== null) {\r\n    inputDivRefCurr.forEach((el) => {\r\n      const classes = el.classList;\r\n\r\n      const classesArr = Array.from(classes);\r\n      let hideClassName = \"\";\r\n      hideClassName = classesArr.filter((el) => el.startsWith(\"hide\"));\r\n      \r\n      if (hideClassName.length > 0) {\r\n        const classNameDirection = hideClassName[0].substr(\r\n          hideClassName[0].indexOf(\"-\")\r\n        );\r\n\r\n        let elName;\r\n\r\n        // get the 'name' attribute of the input / select field\r\n        elName = el.children[0].children[1].getAttribute(\"name\");\r\n\r\n        // remove 'hideClassName' if there is any and add 'show' class\r\n        if (hideClassName !== \"\") {\r\n          // console.log(hideClassName);\r\n          if (\r\n            elName !== \"name\" &&\r\n            elName !== \"preparation_time\" &&\r\n            elName !== \"type\"\r\n          ) {\r\n            setTimeout(() => {\r\n              el.classList.add(\"show\" + classNameDirection);\r\n              el.classList.remove(hideClassName[0]);\r\n            }, 100);\r\n          } else {\r\n            setTimeout(\r\n              () => {\r\n                el.classList.add(\"show\" + classNameDirection);\r\n                el.classList.remove(hideClassName[0]);\r\n              },\r\n              elName === \"name\"\r\n                ? time\r\n                : elName === \"preparation_time\"\r\n                ? time + timeAdd\r\n                : time + timeAdd * 2\r\n            );\r\n          }\r\n        }\r\n      }\r\n\r\n      if (\r\n        btnRefCurr !== undefined &&\r\n        btnRefCurr !== null &&\r\n        btnRefCurr.classList.contains(\"hide-down\")\r\n      ) {\r\n        setTimeout(() => {\r\n          btnRefCurr.classList.add(\"show-down\");\r\n          btnRefCurr.classList.remove(\"hide-down\");\r\n        }, time + timeAdd * 3);\r\n      }\r\n    });\r\n  }\r\n};\r\n","export const set_Output_Style = \r\n  (inputVal, elTrg, unit, setOutputLeft) => {\r\n\r\n    const styles = getComputedStyle(elTrg);\r\n    const padding =\r\n      parseFloat(styles.paddingLeft) + parseFloat(styles.paddingRight);\r\n\r\n    const elWidth = elTrg.clientWidth;\r\n\r\n    const bubbleWidth = parseFloat(\r\n      getComputedStyle(document.documentElement).getPropertyValue(\r\n        \"--bubble-width\"\r\n      )\r\n    );\r\n\r\n    const thumbWidth = parseFloat(\r\n      getComputedStyle(document.documentElement).getPropertyValue(\r\n        \"--thumb-width\"\r\n      )\r\n    );\r\n    const thumbBorderWidth = parseFloat(\r\n      getComputedStyle(document.documentElement).getPropertyValue(\r\n        \"--thumb-border-width\"\r\n      )\r\n    );\r\n    const thumbMargLeft = 1;\r\n\r\n    if (elTrg !== undefined && elTrg !== null) {\r\n      let refObjMin = parseInt(elTrg.getAttribute(\"min\"));\r\n      let refObjMax = parseInt(elTrg.getAttribute(\"max\"));\r\n\r\n      const ratio =\r\n        ((parseInt(inputVal) - refObjMin) * 100) / (refObjMax - refObjMin);\r\n\r\n      const leftDistance =\r\n        ((padding / 2 +\r\n          thumbMargLeft +\r\n          (thumbWidth + thumbBorderWidth * 2) / 2 -\r\n          bubbleWidth / 2) *\r\n          100) /\r\n        elWidth;\r\n\r\n      const rightDistance =\r\n        ((padding + (thumbWidth + thumbBorderWidth * 2)) * 100) / elWidth;\r\n\r\n      const changeableDistance = (rightDistance * ratio) / 100;\r\n\r\n      setOutputLeft( ratio + leftDistance - changeableDistance + unit);\r\n      return false;\r\n    }\r\n  };","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport Main from \"./components/Main\";\nimport \"./css/style.css\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n          <Main />\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}