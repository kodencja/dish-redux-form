{"version":3,"sources":["img sync /^/.*/.jpg$","img/pizza.jpg","img/plaid.jpg","img/sandwich.jpg","img/soup.jpg","img/veg4.jpg","components/inputTag.js","redux/dishTypes.js","redux/dishReducer.js","redux/rootReducer.js","redux/store.js","components/Input.jsx","components/RenderField.jsx","functions/validation.js","functions/onSubmit.js","components/DishForm.jsx","components/Main.js","redux/dishActions.js","functions/appearing.js","functions/setOutputStyle.js","App.js","reportWebVitals.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","renderTag","output_Style","final_response","any_change_made","typeSet","typeChange","imgName","reset","welcome_txt","initState","url","outputStyle","left","finalResponse","welcomeTxt","anyChangeMade","ifTypeWasSetFirstTime","typeChanged","imgSrc","dishReducer","state","action","type","payload","rootReducer","combineReducers","form","formReducer","dishes","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","Input","input","meta","custom","options","useMemo","dishes_opt","undefined","name","ind","defaultValue","hidden","defaultOption","value","tagtype","className","style","left_styling","htmlFor","label","touched","error","valid","join","RenderField","no_of_inputs","add_class","rest_props","addToInputDivRef","useContext","DishContext","ref","Field","isValidTime","time","length","test","RegExp","errorTime","sendToServer","formData","Promise","reject","method","headers","data","JSON","stringify","setTimeout","axios","then","res","err","message","catch","console","log","startlValues","preparation_time","spiciness_scale","DishesForm","reduxForm","validate","rest","errors","trim","registeredFields","eachProp","valueWithoutSpaces","toString","split","regNo","onSubmitSuccess","result","dispatch","props","dishContext","dishState","formRdx","setType","ifTypeChanged","setFinalResp","resetDishState","setWelcome","checkIfAnyChangeMade","inputDivRef","btnRef","handleSubmit","initialize","submitting","submitFailed","submitSucceeded","useEffect","values","choosePropsToSend","timeChecked","constProps","diameter","no_of_slices","slices_of_bread","watchForStartChangeMade","checkInteger","val","Number","onSubmit","a","reviseDataBeforeSend","SubmissionError","placeholder","component","required","onChange","step","min","max","pattern","inputsDivRef_copy","current","slice","parse","prevVal","parseFloat","title","inital","disabled","classes","getReplyClasses","propTypes","DishForm","PropTypes","element","oneOfType","func","shape","instanceOf","Element","arrayOf","afterSubmit","sendData","finalTimeValidation","checkFloat","typeOnChange","setOutputLeft","setImgSrc","string","isRequired","exact","bool","anyTouched","fields","objectOf","initial","count","number","React","memo","createContext","connect","dishFormRdx","setOutputStyle","setTypeSet","setTypeChange","setWelcomeTxt","titleRef","useRef","answerRef","dishesRef","welcomeRef","inputDivRefCurr","btnRefCurr","forEach","el","classList","classesArr","Array","from","hideClassName","filter","startsWith","elName","classNameDirection","substr","indexOf","children","getAttribute","add","remove","contains","appearInput","dependForLeftStyle","elemInput","elVal","inputVal","elTrg","unit","styles","getComputedStyle","padding","paddingLeft","paddingRight","elWidth","clientWidth","bubbleWidth","document","documentElement","getPropertyValue","thumbWidth","thumbBorderWidth","refObjMin","parseInt","refObjMax","ratio","set_Output_Style","useCallback","includes","push","photo","alt","src","require","default","welcome","Provider","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f4cd8f05.chunk.js","sourcesContent":["var map = {\n\t\"./pizza.jpg\": 255,\n\t\"./plaid.jpg\": 256,\n\t\"./sandwich.jpg\": 257,\n\t\"./soup.jpg\": 258,\n\t\"./veg4.jpg\": 259\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 254;","export default __webpack_public_path__ + \"static/media/pizza.a8e2abcd.jpg\";","export default __webpack_public_path__ + \"static/media/plaid.d089c43d.jpg\";","export default __webpack_public_path__ + \"static/media/sandwich.4c85b99e.jpg\";","export default __webpack_public_path__ + \"static/media/soup.eae9ab6c.jpg\";","export default __webpack_public_path__ + \"static/media/veg4.5db3e508.jpg\";","export const createInputTag =\r\n  (renderTag) =>\r\n  ({ input, label, meta, ...custom }) => {\r\n    const { touched, error, valid } = meta;\r\n    return (\r\n      <div\r\n      className={[\r\n        \"input-block\",\r\n        error && touched ? \"error\" : \"\",\r\n        valid && touched ? \"valid\" : \"\",\r\n      ].join(\" \")}\r\n      >\r\n        <label htmlFor={input.name}>{label}</label>\r\n        {renderTag(input, meta, custom)}\r\n        {touched && error && error !== undefined && (\r\n          <span className=\"invalid-feedback\">{error}</span>\r\n        )}\r\n      </div>\r\n    );\r\n  };","export const output_Style = \"outputStyle\";\r\nexport const final_response = \"finalResponse\";\r\nexport const any_change_made = \"any_change_made\";\r\nexport const typeSet = \"typeSet\";\r\nexport const typeChange = \"typeChange\";\r\nexport const setMinVal = \"setMinVal\";\r\nexport const setMaxVal = \"setMaxVal\";\r\nexport const imgName = \"imgName\";\r\nexport const reset = \"reset\";\r\nexport const welcome_txt = \"welcomeTxt\";","import {\r\n  any_change_made,\r\n  final_response,\r\n  imgName,\r\n  output_Style,\r\n  reset,\r\n  setMaxVal,\r\n  setMinVal,\r\n  typeChange,\r\n  typeSet,\r\n  welcome_txt,\r\n} from \"./dishTypes\";\r\n\r\nconst initState = {\r\n  url: \"https://jsonplaceholder.typicode.com/posts\",\r\n  outputStyle: { left: \"0\" },\r\n  finalResponse: \"\",\r\n  welcomeTxt: \"Hungry?\",\r\n  anyChangeMade: false,\r\n  ifTypeWasSetFirstTime: false,\r\n  typeChanged: false,\r\n  imgSrc: \"\",\r\n};\r\n\r\nconst dishReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    // to set left value of the \"bubble\" output\r\n    case output_Style:\r\n      return {\r\n        ...state,\r\n        outputStyle: { ...state.outputStyle, left: action.payload },\r\n      };\r\n    case final_response:\r\n      return { ...state, finalResponse: action.payload };\r\n\r\n    case welcome_txt:\r\n      return { ...state, welcomeTxt: action.payload };\r\n\r\n    case typeSet:\r\n      return { ...state, ifTypeWasSetFirstTime: action.payload };\r\n\r\n    case typeChange:\r\n      return { ...state, typeChanged: action.payload };\r\n\r\n    case reset:\r\n      return initState;\r\n\r\n    case imgName:\r\n      return {\r\n        ...state,\r\n        imgSrc: action.payload,\r\n      };\r\n\r\n    case any_change_made:\r\n      return {\r\n        ...state,\r\n        anyChangeMade: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default dishReducer;\r\n","import { combineReducers } from \"redux\";\r\n// import { routerReducer } from \"react-router-redux\";\r\nimport { reducer as formReducer} from 'redux-form';\r\nimport dishReducer from \"./dishReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    form: formReducer,\r\n    dishes: dishReducer,\r\n    // routing: routerReducer\r\n});\r\n\r\nexport default rootReducer;","import { createStore } from 'redux';\r\n// import { routerMiddleware } from 'react-router-redux';\r\nimport rootReducer from \"./rootReducer\";\r\n\r\n\r\n/* eslint-disable no-underscore-dangle */\r\n  const store = createStore(\r\n    rootReducer,\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  )\r\n\r\nexport default store;\r\n/* eslint-enable */","import React, { useMemo } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { defaultOption } from \"./DishForm\";\r\nimport { createInputTag } from \"./inputTag\";\r\n\r\nconst Input = createInputTag((input, meta, custom) => {\r\n  const options = useMemo(() => {\r\n    if (custom.dishes_opt && custom.dishes_opt !== undefined) {\r\n      return custom.dishes_opt.map((name, ind) => {\r\n        if (name === \"default\") {\r\n          return (\r\n            <option defaultValue hidden key={ind}>\r\n              {defaultOption}\r\n            </option>\r\n          );\r\n        } else {\r\n          return (\r\n            <option value={name} key={ind}>\r\n              {name}\r\n            </option>\r\n          );\r\n        }\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  if (custom.tagtype === \"select\") {\r\n    return (\r\n      <custom.tagtype {...input} {...custom}>\r\n        {custom.dishes_opt ? options : null}\r\n      </custom.tagtype>\r\n    );\r\n  } else if (custom.tagtype === \"input\" && custom.type === \"range\") {\r\n    return (\r\n      <>\r\n        <custom.tagtype {...input} {...custom} />\r\n        <output\r\n          className=\"bubble\"\r\n          style={custom.left_styling}\r\n          htmlFor={input.name}\r\n        >\r\n          {input.value}\r\n        </output>\r\n      </>\r\n    );\r\n  } else {\r\n    return <custom.tagtype {...input} {...custom} />;\r\n  }\r\n});\r\n\r\nInput.propTypes = {\r\n  defaultOption: PropTypes.string,\r\n  options: PropTypes.node,\r\n  createInputTag: PropTypes.func,\r\n};\r\n\r\nexport default Input;\r\n","import React, { useContext } from \"react\";\r\nimport { DishContext } from \"./Main\";\r\nimport { Field } from \"redux-form\";\r\n\r\nconst RenderField = ({ no_of_inputs, add_class, ...rest_props }) => {\r\n  const dishContext = useContext(DishContext);\r\n\r\n  const { addToInputDivRef } = dishContext;\r\n\r\n  return no_of_inputs === 1 ? (\r\n    <div className=\"mrg-x-auto narrow\">\r\n      <div className=\"input-cont\">\r\n        <div className={\"trans \" + add_class} ref={addToInputDivRef}>\r\n          <Field {...rest_props} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <Field {...rest_props} />\r\n  );\r\n};\r\n\r\nexport default RenderField;\r\n","import { defaultOption } from \"../components/DishForm\";\r\n\r\n// check time format\r\n// 3 groups of 2 character separated by : each character must be a digit contained in that specific ranges\r\nconst isValidTime = (time) => {\r\n  let error = \"\";\r\n\r\n  if (time.length < 8) {\r\n    time = time + \":00\";\r\n  }\r\n\r\n  if (time < \"00:15:00\") {\r\n    error = \"We need at least 15 min to prepare the dish!\";\r\n  }\r\n  const regexpAll = new RegExp(\r\n    /^([0-9]|0[0-9]|1[0-9]|2[0-3]):((([0-5][0-9]):([0-5][0-9]))|([0-5][0-9]))$/\r\n  );\r\n\r\n  return { test: regexpAll.test(time), errorTime: error };\r\n};\r\n\r\n\r\nexport const validate = (value, rest) => {\r\n  // console.log(\"validate Fn\");\r\n  // console.log(value);\r\n  const {\r\n    name = \"\",\r\n    preparation_time = \"\",\r\n    type = \"\",\r\n  } = value;\r\n\r\n  const errors = {};\r\n  if (name.trim() === \"\") {\r\n    errors.name = \"Dish name is required!\";\r\n  }\r\n  if (preparation_time.trim() === \"\") {\r\n    errors.preparation_time = \"Preparation time is required!\";\r\n  }\r\n  if (type.trim() === \"\" || type === defaultOption) {\r\n    errors.type = \"Type is required!\";\r\n  }\r\n\r\n  // advanced validation - check type of the value (numbers or letters)\r\n  if (rest.registeredFields && rest.registeredFields !== undefined) {\r\n    for (let eachProp in rest.registeredFields) {\r\n      // console.log(eachProp);\r\n      // console.log(value[eachProp]);\r\n      if(value[eachProp] === undefined && eachProp !== \"name\" && eachProp !== \"preparation_time\" && eachProp !== \"type\" ){\r\n        errors[eachProp] = `This field is required`;\r\n      } else if (value[eachProp] !== undefined && value[eachProp] !== \"\") {\r\n        let valueWithoutSpaces;\r\n        valueWithoutSpaces = value[eachProp].toString().split(\" \").join(\"\");\r\n        // console.log(valueWithoutSpaces);\r\n\r\n        // for alpha characters values\r\n        if (eachProp === \"name\" || eachProp === \"type\") {\r\n          if (value[eachProp].length > 30) {\r\n            errors[eachProp] = `Use max 30 characters!`;\r\n          }\r\n          const regLetters = /^[a-zA-Z]+$/gim;\r\n\r\n          const ifHasNumbers = regLetters.test(valueWithoutSpaces);\r\n          if (!ifHasNumbers) {\r\n            errors[eachProp] = `Use only letters`;\r\n          }\r\n        }\r\n        // for numeric values\r\n        else {\r\n          if (valueWithoutSpaces.length > 10) {\r\n            errors[eachProp] = `The number is too big!`;\r\n          } else if (valueWithoutSpaces === \"0\" || value[eachProp] <= 0) {\r\n            errors[eachProp] = \"The number must exceed 0\";\r\n          } else {\r\n            if (eachProp === \"preparation_time\") {\r\n              const { test, errorTime } = isValidTime(valueWithoutSpaces);\r\n  \r\n              if (!test) {\r\n                errors.preparation_time = \"Use only numbers in time format\";\r\n              }\r\n              if (errorTime !== \"\") {\r\n                errors.preparation_time = errorTime;\r\n              }\r\n            } else {\r\n              let regNo = /\\D/gim;\r\n  \r\n              if (eachProp === \"diameter\") {\r\n                regNo = /^[+-]?([0-9]*[.])?[0-9]+$/;\r\n                let ifHasNumbers = regNo.test(valueWithoutSpaces);\r\n                if (!ifHasNumbers) {\r\n                  errors[eachProp] = `Use floating no`;\r\n                }\r\n              } else {\r\n                let ifHasNumbers = regNo.test(valueWithoutSpaces);\r\n                // console.log(ifHasNumbers);\r\n                if (ifHasNumbers) {\r\n                  errors[eachProp] = `Use only integer no`;\r\n                }\r\n              }\r\n            }\r\n          }\r\n\r\n\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return errors;\r\n};\r\n","import axios from \"axios\";\r\n\r\nexport const sendToServer = (formData, url) => {\r\n  return new Promise((resolve, reject) => {\r\n    const options = {\r\n      method: \"POST\",\r\n      url: url,\r\n      headers: { \"Content-type\": \"application/json\" },\r\n      data: JSON.stringify(formData),\r\n    };\r\n\r\n    setTimeout(() => {\r\n      axios(options)\r\n        .then(\r\n          (res) => {\r\n            // console.log(res.data);\r\n            resolve(res.data);\r\n          },\r\n          (err) => {\r\n            reject(err.message);\r\n          }\r\n        )\r\n        .catch((err) => {\r\n          console.log(err.message);\r\n          reject(err.message);\r\n        });\r\n    }, 500);\r\n  });\r\n};","import React, { useEffect, useContext } from \"react\";\r\nimport PropTypes, { exact } from \"prop-types\";\r\nimport { DishContext } from \"./Main\";\r\nimport { Field, reduxForm, SubmissionError, reset } from \"redux-form\";\r\nimport Input from \"./Input\";\r\nimport RenderField from \"./RenderField\";\r\nimport { validate } from \"../functions/validation\";\r\nimport { sendToServer } from \"../functions/onSubmit\";\r\n\r\nexport const defaultOption = \"Select an option\";\r\n\r\nconst startlValues = {\r\n  name: undefined,\r\n  preparation_time: \"00:15:00\",\r\n  type: defaultOption,\r\n  spiciness_scale: 1,\r\n};\r\n\r\nconst DishForm = (props) => {\r\n  const dishContext = useContext(DishContext);\r\n  const {\r\n    dishState,\r\n    formRdx,\r\n    setType,\r\n    ifTypeChanged,\r\n    setFinalResp,\r\n    resetDishState,\r\n    setWelcome,\r\n    checkIfAnyChangeMade,\r\n    addToInputDivRef,\r\n    inputDivRef,\r\n    btnRef,\r\n  } = dishContext;\r\n\r\n  const {\r\n    handleSubmit,\r\n    initialize,\r\n    submitting,\r\n    submitFailed,\r\n    submitSucceeded,\r\n  } = props;\r\n\r\n  const { finalResponse } = dishState;\r\n\r\n  // initialize values at the very beginning\r\n  useEffect(() => {\r\n    initialize(startlValues);\r\n  }, []);\r\n\r\n  // reinitialize values after submition succeeds\r\n  useEffect(() => {\r\n    if (submitSucceeded) {\r\n      // console.log(\"Reinitialize startlValues\");\r\n      initialize(startlValues);\r\n    }\r\n  }, [submitSucceeded]);\r\n  // }, [onSubmitSuccess]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      formRdx !== undefined &&\r\n      formRdx.values !== undefined &&\r\n      formRdx.values.type &&\r\n      !dishState.ifTypeWasSetFirstTime\r\n    ) {\r\n      setType(true);\r\n    }\r\n  }, [dishState.anyChangeMade]);\r\n\r\n  const finalTimeValidation = (time) => {\r\n    if (time.length < 8) {\r\n      time = time + \":00\";\r\n      return time;\r\n    }\r\n    return time;\r\n  };\r\n\r\n  const choosePropsToSend = (formData) => {\r\n    return new Promise((resolve, reject) => {\r\n      const timeChecked = finalTimeValidation(formData.preparation_time);\r\n\r\n      const constProps = {\r\n        name: formData.name,\r\n        preparation_time: timeChecked,\r\n        type: formData.type,\r\n      };\r\n      let dataToSend = {};\r\n      if (formData.type === \"pizza\") {\r\n        dataToSend = {\r\n          ...constProps,\r\n          diameter: formData.diameter,\r\n          no_of_slices: formData.no_of_slices,\r\n        };\r\n      } else if (formData.type === \"soup\") {\r\n        dataToSend = {\r\n          ...constProps,\r\n          spiciness_scale: formData.spiciness_scale,\r\n        };\r\n      } else {\r\n        dataToSend = {\r\n          ...constProps,\r\n          slices_of_bread: formData.slices_of_bread,\r\n        };\r\n      }\r\n      resolve(dataToSend);\r\n    });\r\n  };\r\n\r\n  const sendData = (formData) => {\r\n    return new Promise(async (resolve, reject) => {\r\n      setFinalResp(\"Wait...\");\r\n\r\n      const reviseDataBeforeSend = await choosePropsToSend(formData);\r\n\r\n      sendToServer(reviseDataBeforeSend, dishState.url)\r\n        .then(\r\n          (res) => {\r\n            setFinalResp(\"Your order has been sent successfully!\");\r\n            setWelcome(\"Thank you!\");\r\n            console.log(res);\r\n            checkIfAnyChangeMade(false);\r\n            resolve();\r\n          },\r\n          (err) => {\r\n            throw err;\r\n          }\r\n        )\r\n        .catch((err) => {\r\n          console.log(err);\r\n          setFinalResp(err);\r\n          reject(new SubmissionError(err));\r\n        });\r\n    });\r\n  };\r\n\r\n  const getReplyClasses = () => {\r\n    let classes = \"reply \";\r\n    classes += submitting\r\n      ? \"wait\"\r\n      : !submitting && submitSucceeded\r\n      ? \"fine\"\r\n      : !submitting && submitFailed\r\n      ? \"bad\"\r\n      : \"\";\r\n    return classes;\r\n  };\r\n\r\n  const typeOnChange = (e) => {\r\n    watchForStartChangeMade();\r\n\r\n    // create new inputDivRef array with three inputDivRefs as constant elements\r\n    let inputsDivRef_copy = inputDivRef.current.slice(0, 3);\r\n    inputDivRef.current = [];\r\n    inputDivRef.current = inputsDivRef_copy;\r\n\r\n    // if (e.target.value === \"soup\" && !formRdx.values.spiciness_scale) {\r\n    // initialize({ ...formRdx.values, spiciness_scale: 1 });\r\n    // }\r\n    setTimeout(() => {\r\n      ifTypeChanged(true);\r\n      // console.log(formRdx);\r\n    }, 50);\r\n  };\r\n\r\n  const watchForStartChangeMade = () => {\r\n    if (!dishState.anyChangeMade) {\r\n      console.log(\"resetDishState\");\r\n      resetDishState();\r\n      checkIfAnyChangeMade(true);\r\n    }\r\n  };\r\n\r\n  const checkInteger = (val) => {\r\n    // console.log(\"val: \", val);\r\n    if (!val || val === \"0\") {\r\n      return val;\r\n    } else {\r\n      return Number(val);\r\n    }\r\n  };\r\n\r\n  const checkFloat = (val, prevVal) => {\r\n    if (!val || val === \"0\") {\r\n      return val;\r\n    } else {\r\n      return parseFloat(val);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form id=\"dishes-form\" onSubmit={handleSubmit(sendData)}>\r\n      <div className=\"row center\">\r\n        <div className=\"input-cont\">\r\n          <div\r\n            className=\"hide-left narrow-70 mrg-x-auto trans\"\r\n            ref={addToInputDivRef}\r\n          >\r\n            <Field\r\n              name=\"name\"\r\n              label=\"Dish name\"\r\n              type=\"text\"\r\n              id=\"name\"\r\n              tagtype=\"input\"\r\n              aria-label=\"name\"\r\n              className=\"form-control\"\r\n              placeholder=\"Write dish name\"\r\n              component={Input}\r\n              required={true}\r\n              onChange={watchForStartChangeMade}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"input-cont\">\r\n          <div\r\n            className=\"trans hide-right narrow-70 mrg-x-auto\"\r\n            ref={addToInputDivRef}\r\n          >\r\n            <Field\r\n              name=\"preparation_time\"\r\n              label=\"Preparation time\"\r\n              type=\"time\"\r\n              tagtype=\"input\"\r\n              id=\"preparation_time\"\r\n              className=\"form-control\"\r\n              step={1}\r\n              aria-label=\"preparation_time\"\r\n              min=\"00:15:00\"\r\n              max=\"23:59:59\"\r\n              pattern={\"[0-9]|0[0-9]|1[0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9]\"}\r\n              component={Input}\r\n              required={true}\r\n              onChange={watchForStartChangeMade}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"input-cont\">\r\n          <div\r\n            className=\"hide-up narrow-70 mrg-x-auto trans\"\r\n            ref={addToInputDivRef}\r\n          >\r\n            <Field\r\n              name=\"type\"\r\n              label=\"Type\"\r\n              tagtype=\"select\"\r\n              dishes_opt={[\"default\", \"pizza\", \"soup\", \"sandwich\"]}\r\n              component={Input}\r\n              aria-label=\"type\"\r\n              id=\"type\"\r\n              className=\"form-control form-control-lg\"\r\n              required\r\n              onChange={typeOnChange}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        {formRdx !== undefined &&\r\n        formRdx.values !== undefined &&\r\n        formRdx.values.type ? (\r\n          formRdx.values.type === \"pizza\" ? (\r\n            <div className=\"mrg-x-auto\">\r\n              <div className=\"input-cont\">\r\n                <div\r\n                  className=\"flex justify-center align-start hide-up trans\"\r\n                  ref={addToInputDivRef}\r\n                >\r\n                  <RenderField\r\n                    tagtype=\"input\"\r\n                    label=\"No of slices\"\r\n                    name=\"no_of_slices\"\r\n                    type=\"number\"\r\n                    id=\"no_of_slices\"\r\n                    className=\"form-control\"\r\n                    aria-label=\"no_of_slices\"\r\n                    required={\r\n                      dishState.ifTypeWasSetFirstTime &&\r\n                      formRdx.values.type === \"pizza\"\r\n                        ? true\r\n                        : false\r\n                    }\r\n                    min={1}\r\n                    max={30}\r\n                    component={Input}\r\n                    parse={checkInteger}\r\n                  />\r\n                  <RenderField\r\n                    tagtype=\"input\"\r\n                    label=\"Diameter\"\r\n                    name=\"diameter\"\r\n                    type=\"number\"\r\n                    id=\"diameter\"\r\n                    className=\"form-control\"\r\n                    step={0.1}\r\n                    aria-label=\"diameter\"\r\n                    required={\r\n                      dishState.ifTypeWasSetFirstTime &&\r\n                      formRdx.values.type === \"pizza\"\r\n                        ? true\r\n                        : false\r\n                    }\r\n                    min={0.1}\r\n                    max={50}\r\n                    parse={checkFloat}\r\n                    component={Input}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ) : formRdx.values.type === \"soup\" ? (\r\n            <RenderField\r\n              tagtype=\"input\"\r\n              title=\"Spiciness scale\"\r\n              name=\"spiciness_scale\"\r\n              type=\"range\"\r\n              id=\"spiciness_scale\"\r\n              className=\"form-control form-control-range\"\r\n              add_class=\"range hide-left\"\r\n              parse={(value) => Number(value)}\r\n              step={1}\r\n              aria-label=\"spiciness_scale\"\r\n              data-sizing=\"px\"\r\n              min={1}\r\n              max={10}\r\n              component={Input}\r\n              meta={{ inital: 1 }}\r\n              required={\r\n                dishState.ifTypeWasSetFirstTime &&\r\n                formRdx.values.type === \"soup\"\r\n                  ? true\r\n                  : false\r\n              }\r\n              left_styling={dishState.outputStyle}\r\n              no_of_inputs={1}\r\n            />\r\n          ) : formRdx.values.type === \"sandwich\" ? (\r\n            <RenderField\r\n              tagtype=\"input\"\r\n              label=\"No of slices\"\r\n              name=\"slices_of_bread\"\r\n              type=\"number\"\r\n              id=\"slices_of_bread\"\r\n              className=\"form-control\"\r\n              add_class=\"number-width hide-right\"\r\n              step={1}\r\n              min={1}\r\n              aria-label=\"slices_of_bread\"\r\n              component={Input}\r\n              required={\r\n                dishState.ifTypeWasSetFirstTime &&\r\n                formRdx.values.type === \"sandwich\"\r\n                  ? true\r\n                  : false\r\n              }\r\n              no_of_inputs={1}\r\n              parse={checkInteger}\r\n            />\r\n          ) : null\r\n        ) : null}\r\n      </div>\r\n      <div className=\"row center\">\r\n        <div className=\"buttons col\">\r\n          <button\r\n            type=\"submit\"\r\n            disabled={submitting}\r\n            className=\"btn btn-check hide-down\"\r\n            ref={btnRef}\r\n          >\r\n            Submit\r\n          </button>\r\n        </div>\r\n        <p name=\"reply\" className={getReplyClasses()}>\r\n          {finalResponse}\r\n        </p>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\n// reset form after sending data successfully\r\nconst afterSubmit = (result, dispatch) => dispatch(reset(\"formRdx\"));\r\n\r\nconst DishesForm = reduxForm({\r\n  form: \"formRdx\",\r\n  validate,\r\n  onSubmitSuccess: afterSubmit,\r\n})(DishForm);\r\n\r\nDishesForm.propTypes = {\r\n  DishForm: PropTypes.element,\r\n  btnRef: PropTypes.oneOfType([\r\n    PropTypes.func,\r\n    PropTypes.shape({ current: PropTypes.instanceOf(Element) }),\r\n  ]),\r\n  inputDivRef: PropTypes.arrayOf(\r\n    PropTypes.oneOfType([\r\n      PropTypes.func,\r\n      PropTypes.shape({ current: PropTypes.instanceOf(Element) }),\r\n    ])\r\n  ),\r\n  reset: PropTypes.func,\r\n  afterSubmit: PropTypes.func,\r\n  sendToServer: PropTypes.func,\r\n  sendData: PropTypes.func,\r\n  choosePropsToSend: PropTypes.func,\r\n  finalTimeValidation: PropTypes.func,\r\n  validate: PropTypes.func,\r\n  watchForStartChangeMade: PropTypes.func,\r\n  checkFloat: PropTypes.func,\r\n  checkInteger: PropTypes.func,\r\n  getReplyClasses: PropTypes.func,\r\n  typeOnChange: PropTypes.func,\r\n  addToInputDivRef: PropTypes.func,\r\n  Input: PropTypes.element,\r\n  Field: PropTypes.element,\r\n  RenderField: PropTypes.element,\r\n  setOutputLeft: PropTypes.func,\r\n  setType: PropTypes.func,\r\n  ifTypeChanged: PropTypes.func,\r\n  setImgSrc: PropTypes.func,\r\n  setFinalResp: PropTypes.func,\r\n  setWelcome: PropTypes.func,\r\n  resetDishState: PropTypes.func,\r\n  checkIfAnyChangeMade: PropTypes.func,\r\n  dishState: PropTypes.shape({\r\n    url: PropTypes.string.isRequired,\r\n    outputStyle: exact({ left: PropTypes.string }).isRequired,\r\n    finalResponse: PropTypes.string.isRequired,\r\n    welcomeTxt: PropTypes.string.isRequired,\r\n    anyChangeMade: PropTypes.bool.isRequired,\r\n    ifTypeWasSetFirstTime: PropTypes.bool.isRequired,\r\n    typeChanged: PropTypes.bool.isRequired,\r\n    imgSrc: PropTypes.string.isRequired,\r\n  }),\r\n  formRdx: PropTypes.shape({\r\n    anyTouched: PropTypes.bool,\r\n    fields: PropTypes.objectOf(PropTypes.objectOf(PropTypes.bool)),\r\n    initial: PropTypes.shape({\r\n      name: PropTypes.string,\r\n      preparation_time: PropTypes.string,\r\n      type: PropTypes.string,\r\n    }),\r\n    registeredFields: PropTypes.shape({\r\n      name: PropTypes.exact({\r\n        name: PropTypes.string,\r\n        type: PropTypes.string,\r\n        count: PropTypes.number,\r\n      }),\r\n      preparation_time: PropTypes.exact({\r\n        name: PropTypes.string,\r\n        type: PropTypes.string,\r\n        count: PropTypes.number,\r\n      }),\r\n      type: PropTypes.exact({\r\n        name: PropTypes.string,\r\n        type: PropTypes.string,\r\n        count: PropTypes.number,\r\n      }),\r\n      no_of_slices: PropTypes.exact({\r\n        name: PropTypes.string,\r\n        type: PropTypes.string,\r\n        count: PropTypes.number,\r\n      }),\r\n      diameter: PropTypes.exact({\r\n        name: PropTypes.string,\r\n        type: PropTypes.string,\r\n        count: PropTypes.number,\r\n      }),\r\n      spiciness_scale: PropTypes.exact({\r\n        name: PropTypes.string,\r\n        type: PropTypes.string,\r\n        count: PropTypes.number,\r\n      }),\r\n      slices_of_bread: PropTypes.exact({\r\n        name: PropTypes.string,\r\n        type: PropTypes.string,\r\n        count: PropTypes.number,\r\n      }),\r\n    }),\r\n    values: PropTypes.shape({\r\n      name: PropTypes.string,\r\n      preparation_time: PropTypes.string,\r\n      type: PropTypes.string,\r\n      no_of_slices: PropTypes.number,\r\n      diameter: PropTypes.number,\r\n      spiciness_scale: PropTypes.number,\r\n      slices_of_bread: PropTypes.number,\r\n    }),\r\n  }),\r\n};\r\n\r\nexport default React.memo(DishesForm);\r\n","import React, { useRef, useEffect, useCallback } from \"react\";\r\nimport PropTypes, { exact } from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  setOutputStyle,\r\n  setTypeSet,\r\n  setFinalResponse,\r\n  setTypeChange,\r\n  resetAll,\r\n  setImgSrc,\r\n  checkIfAnyChangeMade,\r\n  setWelcomeTxt,\r\n} from \"../redux/dishActions\";\r\nimport { appearInput } from \"../functions/appearing\";\r\nimport { set_Output_Style } from \"../functions/setOutputStyle\";\r\nimport DishForm, { defaultOption } from \"./DishForm\";\r\n\r\nexport const DishContext = React.createContext();\r\n\r\nconst Main = (props) => {\r\n  const {\r\n    dishState,\r\n    dishFormRdx,\r\n    setOutputLeft,\r\n    setType,\r\n    ifTypeChanged,\r\n    setImgSrc,\r\n    setFinalResp,\r\n    setWelcome,\r\n    resetDishState,\r\n    checkIfAnyChangeMade,\r\n  } = props;\r\n\r\n  const { formRdx } = dishFormRdx;\r\n\r\n  // main title ref\r\n  const titleRef = useRef();\r\n  // refs to particular divs\r\n  const answerRef = useRef();\r\n  const dishesRef = useRef();\r\n\r\n  // ref to submit btn\r\n  const btnRef = useRef();\r\n\r\n  // reply (with finalResponse) ref\r\n  const welcomeRef = useRef();\r\n\r\n  // array of inputs' wrapper div refs\r\n  const inputDivRef = useRef([]);\r\n\r\n  // useEffect(()=>{\r\n  //   console.log(dishFormRdx);\r\n  // },[])\r\n\r\n  useEffect(() => {\r\n    if (dishState.ifTypeWasSetFirstTime && formRdx.values.type !== undefined) {\r\n      setTimeout(() => {\r\n        setImgSrc(formRdx.values.type);\r\n      }, 500);\r\n    }\r\n  }, [dishState.typeChanged]);\r\n\r\n  // handle input appearing animation\r\n  useEffect(() => {\r\n    if (inputDivRef.current !== undefined && btnRef.current !== undefined) {\r\n      appearInput(inputDivRef.current, btnRef.current);\r\n    }\r\n  }, [dishState.typeChanged]);\r\n\r\n  const dependForLeftStyle =\r\n    dishState.ifTypeWasSetFirstTime && formRdx.values.type === \"soup\"\r\n      ? formRdx.values.spiciness_scale\r\n      : dishState.typeChanged;\r\n\r\n  useEffect(() => {\r\n    // call a function to set a left distance of bubble with the default value - dedicated to \"range\" type input\r\n    if (inputDivRef.current !== undefined && inputDivRef.current !== null) {\r\n      inputDivRef.current.forEach((el) => {\r\n        const elemInput = el.children[0].children[1];\r\n        const elType = elemInput.getAttribute(\"type\");\r\n\r\n        if (elType === \"range\") {\r\n          const elVal = elemInput.getAttribute(\"value\");\r\n\r\n          // set dynamically the bubble's 'left' attribute\r\n          if (elVal !== undefined && elVal !== \"\") {\r\n            set_Output_Style(elVal, elemInput, \"%\", setOutputLeft);\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }, [dependForLeftStyle]);\r\n\r\n  // handle main title appearing and \"Hungry?\" welcome question\r\n  useEffect(() => {\r\n    if (titleRef.current !== undefined && titleRef.current !== null) {\r\n      setTimeout(() => {\r\n        titleRef.current.classList.add(\"drop-fast\");\r\n        titleRef.current.classList.remove(\"hide-upper\");\r\n      }, 1500);\r\n    }\r\n\r\n    if (welcomeRef.current !== undefined && welcomeRef.current !== null) {\r\n      welcomeRef.current.classList.add(\"hello\");\r\n    }\r\n  }, []);\r\n\r\n  // input's array refs\r\n  const addToInputDivRef = useCallback(\r\n    (el) => {\r\n      // add inputDivs at the beginning\r\n      if (!dishState.typeChanged && !dishState.ifTypeWasSetFirstTime) {\r\n        if (el && !inputDivRef.current.includes(el)) {\r\n          inputDivRef.current.push(el);\r\n        }\r\n      }\r\n      // add additional inputDivs on every 'type' change\r\n      else if (dishState.typeChanged) {\r\n        // console.log(inputDivRef.current);\r\n        if (el && !inputDivRef.current.includes(el)) {\r\n          inputDivRef.current.push(el);\r\n        }\r\n      }\r\n\r\n      // if all inputDivs are added restore dish.'typeChanged' to false\r\n      if (inputDivRef.current.length >= 4) {\r\n        setTimeout(() => {\r\n          ifTypeChanged(false);\r\n        }, 1050);\r\n      }\r\n    },\r\n    [dishState.typeChanged]\r\n  );\r\n\r\n  const photo = (\r\n    <img\r\n      alt={\r\n        dishState.ifTypeWasSetFirstTime && !dishState.typeChanged\r\n          ? formRdx.values.type\r\n          : \"\"\r\n      }\r\n      className={`photo ${!dishState.typeChanged ? \"hanging\" : \"hide-photo\"} `}\r\n      src={\r\n        dishState.ifTypeWasSetFirstTime &&\r\n        dishState.imgSrc !== \"\" &&\r\n        formRdx.values.type !== undefined\r\n          ? require(`../img/${dishState.imgSrc}.jpg`).default\r\n          : \"\"\r\n      }\r\n    />\r\n  );\r\n\r\n  const welcome = (\r\n    <p className=\"welcome\" ref={welcomeRef}>\r\n      {dishState.welcomeTxt}\r\n    </p>\r\n  );\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h2 className=\"title hide-upper\" ref={titleRef}>\r\n        Let's have a delicious meal!\r\n      </h2>\r\n      <div className=\"dishes flex justify-center align-center\" ref={dishesRef}>\r\n        <DishContext.Provider\r\n          value={{\r\n            dishState,\r\n            formRdx,\r\n            setOutputLeft,\r\n            setType,\r\n            ifTypeChanged,\r\n            setFinalResp,\r\n            resetDishState,\r\n            setWelcome,\r\n            checkIfAnyChangeMade,\r\n            addToInputDivRef,\r\n            inputDivRef,\r\n            btnRef,\r\n          }}\r\n        >\r\n          <DishForm />\r\n        </DishContext.Provider>\r\n        <div className=\"image mrg-x-auto\">\r\n          <div className=\"answer\" ref={answerRef}>\r\n            {dishState.ifTypeWasSetFirstTime &&\r\n            formRdx.values.type !== defaultOption\r\n              ? photo\r\n              : welcome}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    dishState: state.dishes,\r\n    dishFormRdx: state.form,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setOutputLeft: (value) => dispatch(setOutputStyle(value)),\r\n    setType: (value) => dispatch(setTypeSet(value)),\r\n    ifTypeChanged: (value) => dispatch(setTypeChange(value)),\r\n    setImgSrc: (value) => dispatch(setImgSrc(value)),\r\n    setFinalResp: (value) => dispatch(setFinalResponse(value)),\r\n    setWelcome: (value) => dispatch(setWelcomeTxt(value)),\r\n    resetDishState: () => dispatch(resetAll()),\r\n    checkIfAnyChangeMade: (value) => dispatch(checkIfAnyChangeMade(value)),\r\n  };\r\n};\r\n\r\n\r\n\r\nMain.propTypes = {\r\n  DishForm: PropTypes.element,\r\n  photo: PropTypes.node,\r\n  welcome: PropTypes.number,\r\n  welcomeRef: PropTypes.oneOfType([\r\n    PropTypes.func,\r\n    PropTypes.shape({ current: PropTypes.instanceOf(Element) }),\r\n  ]),\r\n  defaultOption: PropTypes.number,\r\n  set_Output_Style: PropTypes.func,\r\n  setOutputLeft: PropTypes.func,\r\n  setType: PropTypes.func,\r\n  ifTypeChanged: PropTypes.func,\r\n  setImgSrc: PropTypes.func,\r\n  setFinalResp: PropTypes.func,\r\n  setWelcome: PropTypes.func,\r\n  resetDishState: PropTypes.func,\r\n  checkIfAnyChangeMade: PropTypes.func,\r\n  dishState: PropTypes.shape({\r\n    url: PropTypes.string.isRequired,\r\n    outputStyle: exact({ left: PropTypes.string }).isRequired,\r\n    finalResponse: PropTypes.string.isRequired,\r\n    welcomeTxt: PropTypes.string.isRequired,\r\n    anyChangeMade: PropTypes.bool.isRequired,\r\n    ifTypeWasSetFirstTime: PropTypes.bool.isRequired,\r\n    typeChanged: PropTypes.bool.isRequired,\r\n    imgSrc: PropTypes.string.isRequired,\r\n  }),\r\n  formRdx: PropTypes.shape({\r\n    anyTouched: PropTypes.bool,\r\n    fields: PropTypes.objectOf(PropTypes.objectOf(PropTypes.bool)),\r\n    initial: PropTypes.shape({\r\n      name: PropTypes.string,\r\n      preparation_time: PropTypes.string,\r\n      type: PropTypes.string,\r\n    }),\r\n    registeredFields: PropTypes.shape({\r\n      name: PropTypes.exact({\r\n        name: PropTypes.string,\r\n        type: PropTypes.string,\r\n        count: PropTypes.number,\r\n      }),\r\n      preparation_time: PropTypes.exact({\r\n        name: PropTypes.string,\r\n        type: PropTypes.string,\r\n        count: PropTypes.number,\r\n      }),\r\n      type: PropTypes.exact({\r\n        name: PropTypes.string,\r\n        type: PropTypes.string,\r\n        count: PropTypes.number,\r\n      }),\r\n      no_of_slices: PropTypes.exact({\r\n        name: PropTypes.string,\r\n        type: PropTypes.string,\r\n        count: PropTypes.number,\r\n      }),\r\n      diameter: PropTypes.exact({\r\n        name: PropTypes.string,\r\n        type: PropTypes.string,\r\n        count: PropTypes.number,\r\n      }),\r\n      spiciness_scale: PropTypes.exact({\r\n        name: PropTypes.string,\r\n        type: PropTypes.string,\r\n        count: PropTypes.number,\r\n      }),\r\n      slices_of_bread: PropTypes.exact({\r\n        name: PropTypes.string,\r\n        type: PropTypes.string,\r\n        count: PropTypes.number,\r\n      }),\r\n    }),\r\n    values: PropTypes.shape({\r\n      name: PropTypes.string,\r\n      preparation_time: PropTypes.string,\r\n      type: PropTypes.string,\r\n      no_of_slices: PropTypes.number,\r\n      diameter: PropTypes.number,\r\n      spiciness_scale: PropTypes.number,\r\n      slices_of_bread: PropTypes.number,\r\n    }),\r\n  }),\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);\r\n","import { output_Style, final_response, typeSet, typeChange, reset, imgName, any_change_made, welcome_txt } from \"./dishTypes\"\r\n\r\n\r\nexport const setOutputStyle = (value) =>{\r\n    return {\r\n        type: output_Style,\r\n        payload: value\r\n    }\r\n};\r\n\r\nexport const setFinalResponse = (words) => {\r\n    return {\r\n        type: final_response,\r\n        payload: words\r\n    }\r\n}\r\n\r\nexport const setTypeSet = (value) => {\r\n    return {\r\n        type: typeSet,\r\n        payload: value\r\n    }\r\n}\r\n\r\nexport const setTypeChange = (value) => {\r\n    return {\r\n        type: typeChange,\r\n        payload: value\r\n    }\r\n}\r\n\r\nexport const setWelcomeTxt = (value) => {\r\n    return {\r\n        type: welcome_txt,\r\n        payload: value\r\n    }\r\n}\r\n\r\nexport const resetAll = () => {\r\n    return {\r\n        type: reset\r\n    }\r\n}\r\n\r\nexport const setImgSrc = (name) => {\r\n    return {\r\n        type: imgName,\r\n        payload: name\r\n    }\r\n}\r\n\r\nexport const checkIfAnyChangeMade = (val) => {\r\n    return {\r\n        type: any_change_made,\r\n        payload: val\r\n    }\r\n}","export const appearInput = (inputDivRefCurr, btnRefCurr) => {\r\n  const time = 2500,\r\n    timeAdd = 700;\r\n\r\n  if (inputDivRefCurr !== undefined && inputDivRefCurr !== null) {\r\n    inputDivRefCurr.forEach((el) => {\r\n      const classes = el.classList;\r\n\r\n      const classesArr = Array.from(classes);\r\n      let hideClassName = \"\";\r\n      hideClassName = classesArr.filter((el) => el.startsWith(\"hide\"));\r\n      \r\n      if (hideClassName.length > 0) {\r\n        const classNameDirection = hideClassName[0].substr(\r\n          hideClassName[0].indexOf(\"-\")\r\n        );\r\n\r\n        let elName;\r\n\r\n        // get the 'name' attribute of the input / select field\r\n        elName = el.children[0].children[1].getAttribute(\"name\");\r\n\r\n        // remove 'hideClassName' if there is any and add 'show' class\r\n        if (hideClassName !== \"\") {\r\n          // console.log(hideClassName);\r\n          if (\r\n            elName !== \"name\" &&\r\n            elName !== \"preparation_time\" &&\r\n            elName !== \"type\"\r\n          ) {\r\n            setTimeout(() => {\r\n              el.classList.add(\"show\" + classNameDirection);\r\n              el.classList.remove(hideClassName[0]);\r\n            }, 100);\r\n          } else {\r\n            setTimeout(\r\n              () => {\r\n                el.classList.add(\"show\" + classNameDirection);\r\n                el.classList.remove(hideClassName[0]);\r\n              },\r\n              elName === \"name\"\r\n                ? time\r\n                : elName === \"preparation_time\"\r\n                ? time + timeAdd\r\n                : time + timeAdd * 2\r\n            );\r\n          }\r\n        }\r\n      }\r\n\r\n      if (\r\n        btnRefCurr !== undefined &&\r\n        btnRefCurr !== null &&\r\n        btnRefCurr.classList.contains(\"hide-down\")\r\n      ) {\r\n        setTimeout(() => {\r\n          btnRefCurr.classList.add(\"show-down\");\r\n          btnRefCurr.classList.remove(\"hide-down\");\r\n        }, time + timeAdd * 3);\r\n      }\r\n    });\r\n  }\r\n};\r\n","export const set_Output_Style = \r\n  (inputVal, elTrg, unit, setOutputLeft) => {\r\n\r\n    const styles = getComputedStyle(elTrg);\r\n    const padding =\r\n      parseFloat(styles.paddingLeft) + parseFloat(styles.paddingRight);\r\n\r\n    const elWidth = elTrg.clientWidth;\r\n\r\n    const bubbleWidth = parseFloat(\r\n      getComputedStyle(document.documentElement).getPropertyValue(\r\n        \"--bubble-width\"\r\n      )\r\n    );\r\n\r\n    const thumbWidth = parseFloat(\r\n      getComputedStyle(document.documentElement).getPropertyValue(\r\n        \"--thumb-width\"\r\n      )\r\n    );\r\n    const thumbBorderWidth = parseFloat(\r\n      getComputedStyle(document.documentElement).getPropertyValue(\r\n        \"--thumb-border-width\"\r\n      )\r\n    );\r\n    const thumbMargLeft = 1;\r\n\r\n    if (elTrg !== undefined && elTrg !== null) {\r\n      let refObjMin = parseInt(elTrg.getAttribute(\"min\"));\r\n      let refObjMax = parseInt(elTrg.getAttribute(\"max\"));\r\n\r\n      const ratio =\r\n        ((parseInt(inputVal) - refObjMin) * 100) / (refObjMax - refObjMin);\r\n\r\n      const leftDistance =\r\n        ((padding / 2 +\r\n          thumbMargLeft +\r\n          (thumbWidth + thumbBorderWidth * 2) / 2 -\r\n          bubbleWidth / 2) *\r\n          100) /\r\n        elWidth;\r\n\r\n      const rightDistance =\r\n        ((padding + (thumbWidth + thumbBorderWidth * 2)) * 100) / elWidth;\r\n\r\n      const changeableDistance = (rightDistance * ratio) / 100;\r\n\r\n      setOutputLeft( ratio + leftDistance - changeableDistance + unit);\r\n      return false;\r\n    }\r\n  };","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport Main from \"./components/Main\";\nimport \"./css/style.css\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n          <Main />\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}